// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.test.suiblogexample.sui.contract.taskservice;

import org.test.suiblogexample.domain.article.AbstractArticleEvent;
import org.test.suiblogexample.sui.contract.repository.*;
import org.test.suiblogexample.sui.contract.service.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

@Service
public class UpdateArticleStateTaskService {

    @Autowired
    private SuiArticleService suiArticleService;

    @Autowired
    private ArticleEventRepository articleEventRepository;

    @Autowired
    private ArticleEventService articleEventService;

    @Scheduled(fixedDelayString = "${sui.contract.update-article-states.fixed-delay:5000}")
    @Transactional
    public void updateArticleStates() {
        java.util.List<AbstractArticleEvent> es = articleEventRepository.findByStatusIsNull();
        AbstractArticleEvent e = es.stream().findFirst().orElse(null);
        if (e != null) {
            String objectId = e.getId();
            if (ArticleEventService.isDeletionCommand(e)) {
                suiArticleService.deleteArticle(objectId);
            } else {
                suiArticleService.updateArticleState(objectId);
            }
            es.stream().filter(ee -> ee.getId().equals(objectId))
                    .forEach(articleEventService::updateStatusToProcessed);
        }
    }
}
