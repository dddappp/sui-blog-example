// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.test.suiblogexample.domain.blog;

import java.util.*;
import java.util.Date;
import java.math.BigInteger;
import org.test.suiblogexample.domain.*;
import org.test.suiblogexample.specialization.*;

public abstract class AbstractBlogAggregate extends AbstractAggregate implements BlogAggregate {
    private BlogState.MutableBlogState state;

    private List<Event> changes = new ArrayList<Event>();

    public AbstractBlogAggregate(BlogState state) {
        this.state = (BlogState.MutableBlogState)state;
    }

    public BlogState getState() {
        return this.state;
    }

    public List<Event> getChanges() {
        return this.changes;
    }

    public void throwOnInvalidStateTransition(Command c) {
        BlogCommand.throwOnInvalidStateTransition(this.state, c);
    }

    protected void apply(Event e) {
        onApplying(e);
        state.mutate(e);
        changes.add(e);
    }


    ////////////////////////

    public static class SimpleBlogAggregate extends AbstractBlogAggregate {
        public SimpleBlogAggregate(BlogState state) {
            super(state);
        }

        @Override
        public void addArticle(String articleId, Long offChainVersion, String commandId, String requesterId, BlogCommands.AddArticle c) {
            try {
                verifyAddArticle(articleId, c);
            } catch (Exception ex) {
                throw new DomainError("VerificationFailed", ex);
            }

            Event e = newArticleAddedToBlog(articleId, offChainVersion, commandId, requesterId);
            apply(e);
        }

        @Override
        public void removeArticle(String articleId, Long offChainVersion, String commandId, String requesterId, BlogCommands.RemoveArticle c) {
            try {
                verifyRemoveArticle(articleId, c);
            } catch (Exception ex) {
                throw new DomainError("VerificationFailed", ex);
            }

            Event e = newArticleRemovedFromBlog(articleId, offChainVersion, commandId, requesterId);
            apply(e);
        }

        protected void verify__Init__(BlogCommands.__Init__ c) {

            ReflectUtils.invokeStaticMethod(
                    "org.test.suiblogexample.domain.blog.__Init__Logic",
                    "verify",
                    new Class[]{BlogState.class, VerificationContext.class},
                    new Object[]{getState(), VerificationContext.forCommand(c)}
            );

//package org.test.suiblogexample.domain.blog;
//
//public class __Init__Logic {
//    public static void verify(BlogState blogState, VerificationContext verificationContext) {
//    }
//}

        }
           

        protected void verifyDonate(BlogCommands.Donate c) {

            ReflectUtils.invokeStaticMethod(
                    "org.test.suiblogexample.domain.blog.DonateLogic",
                    "verify",
                    new Class[]{BlogState.class, VerificationContext.class},
                    new Object[]{getState(), VerificationContext.forCommand(c)}
            );

//package org.test.suiblogexample.domain.blog;
//
//public class DonateLogic {
//    public static void verify(BlogState blogState, VerificationContext verificationContext) {
//    }
//}

        }
           

        protected void verifyWithdraw(BigInteger amount, BlogCommands.Withdraw c) {
            BigInteger Amount = amount;

            ReflectUtils.invokeStaticMethod(
                    "org.test.suiblogexample.domain.blog.WithdrawLogic",
                    "verify",
                    new Class[]{BlogState.class, BigInteger.class, VerificationContext.class},
                    new Object[]{getState(), amount, VerificationContext.forCommand(c)}
            );

//package org.test.suiblogexample.domain.blog;
//
//public class WithdrawLogic {
//    public static void verify(BlogState blogState, BigInteger amount, VerificationContext verificationContext) {
//    }
//}

        }
           

        protected void verifyAddArticle(String articleId, BlogCommands.AddArticle c) {
            String ArticleId = articleId;

            ReflectUtils.invokeStaticMethod(
                    "org.test.suiblogexample.domain.blog.AddArticleLogic",
                    "verify",
                    new Class[]{BlogState.class, String.class, VerificationContext.class},
                    new Object[]{getState(), articleId, VerificationContext.forCommand(c)}
            );

//package org.test.suiblogexample.domain.blog;
//
//public class AddArticleLogic {
//    public static void verify(BlogState blogState, String articleId, VerificationContext verificationContext) {
//    }
//}

        }
           

        protected void verifyRemoveArticle(String articleId, BlogCommands.RemoveArticle c) {
            String ArticleId = articleId;

            ReflectUtils.invokeStaticMethod(
                    "org.test.suiblogexample.domain.blog.RemoveArticleLogic",
                    "verify",
                    new Class[]{BlogState.class, String.class, VerificationContext.class},
                    new Object[]{getState(), articleId, VerificationContext.forCommand(c)}
            );

//package org.test.suiblogexample.domain.blog;
//
//public class RemoveArticleLogic {
//    public static void verify(BlogState blogState, String articleId, VerificationContext verificationContext) {
//    }
//}

        }
           

        protected AbstractBlogEvent.InitBlogEvent newInitBlogEvent(Long offChainVersion, String commandId, String requesterId) {
            BlogEventId eventId = new BlogEventId(getState().getId(), null);
            AbstractBlogEvent.InitBlogEvent e = new AbstractBlogEvent.InitBlogEvent();

            e.setSuiTimestamp(null); // todo Need to update 'verify' method to return event properties.
            e.setSuiTxDigest(null); // todo Need to update 'verify' method to return event properties.
            e.setSuiEventSeq(null); // todo Need to update 'verify' method to return event properties.
            e.setSuiPackageId(null); // todo Need to update 'verify' method to return event properties.
            e.setSuiTransactionModule(null); // todo Need to update 'verify' method to return event properties.
            e.setSuiSender(null); // todo Need to update 'verify' method to return event properties.
            e.setSuiType(null); // todo Need to update 'verify' method to return event properties.
            e.setStatus(null); // todo Need to update 'verify' method to return event properties.

            e.setCommandId(commandId);
            e.setCreatedBy(requesterId);
            e.setCreatedAt((java.util.Date)ApplicationContext.current.getTimestampService().now(java.util.Date.class));

            e.setBlogEventId(eventId);
            return e;
        }

        protected AbstractBlogEvent.ArticleAddedToBlog newArticleAddedToBlog(String articleId, Long offChainVersion, String commandId, String requesterId) {
            BlogEventId eventId = new BlogEventId(getState().getId(), null);
            AbstractBlogEvent.ArticleAddedToBlog e = new AbstractBlogEvent.ArticleAddedToBlog();

            e.setArticleId(articleId);
            e.setSuiTimestamp(null); // todo Need to update 'verify' method to return event properties.
            e.setSuiTxDigest(null); // todo Need to update 'verify' method to return event properties.
            e.setSuiEventSeq(null); // todo Need to update 'verify' method to return event properties.
            e.setSuiPackageId(null); // todo Need to update 'verify' method to return event properties.
            e.setSuiTransactionModule(null); // todo Need to update 'verify' method to return event properties.
            e.setSuiSender(null); // todo Need to update 'verify' method to return event properties.
            e.setSuiType(null); // todo Need to update 'verify' method to return event properties.
            e.setStatus(null); // todo Need to update 'verify' method to return event properties.

            e.setCommandId(commandId);
            e.setCreatedBy(requesterId);
            e.setCreatedAt((java.util.Date)ApplicationContext.current.getTimestampService().now(java.util.Date.class));

            e.setBlogEventId(eventId);
            return e;
        }

        protected AbstractBlogEvent.ArticleRemovedFromBlog newArticleRemovedFromBlog(String articleId, Long offChainVersion, String commandId, String requesterId) {
            BlogEventId eventId = new BlogEventId(getState().getId(), null);
            AbstractBlogEvent.ArticleRemovedFromBlog e = new AbstractBlogEvent.ArticleRemovedFromBlog();

            e.setArticleId(articleId);
            e.setSuiTimestamp(null); // todo Need to update 'verify' method to return event properties.
            e.setSuiTxDigest(null); // todo Need to update 'verify' method to return event properties.
            e.setSuiEventSeq(null); // todo Need to update 'verify' method to return event properties.
            e.setSuiPackageId(null); // todo Need to update 'verify' method to return event properties.
            e.setSuiTransactionModule(null); // todo Need to update 'verify' method to return event properties.
            e.setSuiSender(null); // todo Need to update 'verify' method to return event properties.
            e.setSuiType(null); // todo Need to update 'verify' method to return event properties.
            e.setStatus(null); // todo Need to update 'verify' method to return event properties.

            e.setCommandId(commandId);
            e.setCreatedBy(requesterId);
            e.setCreatedAt((java.util.Date)ApplicationContext.current.getTimestampService().now(java.util.Date.class));

            e.setBlogEventId(eventId);
            return e;
        }

    }

}

